{"version":3,"file":"707.0121a60736b096f9b426.js","mappings":"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","sources":["webpack://LHCReactAPPAdmin/./src/components/DashboardChatTabs.js","webpack://LHCReactAPPAdmin/./src/components/lib/useInterval.js"],"sourcesContent":["import React, { useEffect, useState, useReducer, useRef } from \"react\";\nimport axios from \"axios\";\nimport { useTranslation } from 'react-i18next';\nimport useInterval from \"./lib/useInterval\";\n\nfunction reducer(state, action) {\n    switch (action.type) {\n\n        case 'attr':\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex === -1) return state;\n            state.chats[foundIndex] = { ...state.chats[foundIndex], ...action.value };\n            state = { ...state };\n            return state;\n\n        case 'attr_remove':\n            var foundIndex = state.chats.findIndex(x => x[action.attr] == action.id);\n            if (foundIndex === -1) return state;\n            state.chats[foundIndex] = { ...state.chats[foundIndex], ...action.value };\n            state = { ...state };\n            return state;\n\n        case 'update': {\n            return { ...state, ...action.value }\n        }\n\n        case 'add': {\n            var foundIndex = state.chats.findIndex(x => x.id == action.value.id);\n            if (foundIndex === -1) {\n                if (action.static_order === true) {\n\n                    var insertIndex = state.chats.findIndex(x => x.id > action.value.id);\n\n                    if (insertIndex === -1) {\n                        state.chats.push(action.value);\n                    } else {\n                        state.chats.splice(insertIndex, 0, action.value);\n                    }\n\n                } else {\n                    state.chats.unshift(action.value);\n                }\n            } else {\n                state.chats[foundIndex].active = true;\n                state.chats[foundIndex].mn = 0;\n                state.chats[foundIndex].support_chat = false;\n            }\n\n            return { ...state }\n        }\n\n        case 'remove': {\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex === -1) return state;\n            state.chats.splice(foundIndex, 1);\n            return { ...state }\n        }\n\n        case 'update_chat': {\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex === -1) return state;\n            state.chats[foundIndex] = { ...state.chats[foundIndex], ...action.value }\n            return { ...state }\n        }\n\n        case 'msg_received': {\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex === -1) return state;\n\n            state.chats[foundIndex].msg = action.value.msg;\n\n            var el = document.getElementById('chat-tab-link-' + action.id);\n\n            if (el === null || !el.classList.contains('active')) {\n                state.chats[foundIndex].active = false;\n            } else {\n                state.chats[foundIndex].active = true;\n            }\n\n            state.chats[foundIndex].mn = state.chats[foundIndex].active == false ? (state.chats[foundIndex].mn ? (state.chats[foundIndex].mn + action.value.mn) : action.value.mn) : 0;\n\n            // Push to very first if it's not static order\n            if (action.static_order === false) {\n                // Set last appended messages as first array element\n                state.chats.splice(0, 0, state.chats.splice(foundIndex, 1)[0]);\n            }\n\n            return { ...state }\n        }\n\n        case 'refocus': {\n            var foundIndex = state.chats.findIndex(x => x.active == true);\n            if (foundIndex !== -1) {\n                if (action.id == state.chats[foundIndex].id) {\n                    return state;\n                }\n                state.chats[foundIndex].active = false;\n            }\n\n            var foundIndex = state.chats.findIndex(x => x.id == action.id);\n            if (foundIndex !== -1) {\n                state.chats[foundIndex].active = true;\n                state.chats[foundIndex].mn = 0;\n                state.chats[foundIndex].support_chat = false;\n            }\n\n            return { ...state }\n        }\n\n        case 'group_offline':\n            state.group_offline = action.value;\n            return { ...state };\n\n        default:\n            throw new Error('Unknown action!');\n    }\n}\n\nconst DashboardChatTabs = props => {\n\n    const [state, dispatch] = useReducer(reducer, {\n        chats: [],\n        group_offline: false\n    });\n\n    const chatsRef = useRef(state);\n\n    useEffect(\n        () => { chatsRef.current = state },\n        [state]\n    )\n\n    const getChatIds = () => {\n        var chatIds = [];\n        state.chats.map((chat, index) => chatIds.push(chat.id));\n        return chatIds;\n    }\n\n    const loadChatTabIntro = (chatIds) => {\n        axios.get(WWW_DIR_JAVASCRIPT + \"front/tabs/(id)/\" + (typeof chatIds !== 'undefined' ? chatIds.join('/') : getChatIds().join('/'))).then(result => {\n\n            result.data.map((chat, index) => {\n\n                // If nodeJS extension is enabled check chat live status\n                // As on page reload react app can be yet not started and we might not receive event\n                // at that moment react app starts\n                var nodeJSStatus = document.getElementById('node-js-indicator-' + chat.id);\n                if (nodeJSStatus !== null) {\n                    chat.live_status = nodeJSStatus.textContent == 'wifi';\n                }\n\n                dispatch({\n                    type: 'update_chat',\n                    id: chat.id,\n                    value: chat\n                })\n\n            })\n        });\n    }\n\n    if (!document.getElementById('tabs')) {\n        useInterval(() => {\n\n            if (!state.chats || state.chats.length == 0) {\n                return;\n            }\n\n            axios.get(WWW_DIR_JAVASCRIPT + \"front/tabs/(id)/\" + getChatIds().join('/')).then(result => {\n                result.data.map((chat, index) => {\n\n                    // If nodeJS extension is enabled check chat live status\n                    // As on page reload react app can be yet not started and we might not receive event\n                    // at that moment react app starts\n                    var nodeJSStatus = document.getElementById('node-js-indicator-' + chat.id);\n                    if (nodeJSStatus !== null) {\n                        chat.live_status = nodeJSStatus.textContent == 'wifi';\n                    }\n\n                    if (!(!state.chats || state.chats.length == 0)) {\n                        var foundIndex = state.chats.findIndex(x => x.id == chat.id);\n                        if (foundIndex !== -1) {\n                            if (state.chats[foundIndex].lmsg_id !== chat.lmsg_id) {\n                                chat.mn = 1;\n                            } else {\n                                chat.mn = state.chats[foundIndex].mn;\n                            }\n                        }\n                    }\n\n                    dispatch({\n                        type: 'update_chat',\n                        id: chat.id,\n                        value: chat\n                    })\n\n                })\n            });\n\n        }, 1000);\n    }\n\n\n    useEffect(() => {\n\n        function addTabPreload(chatId, params) {\n\n            if (!(!chatsRef.current.chats || chatsRef.current.chats.length == 0) && chatsRef.current.chats.findIndex(x => x.id == chatId) !== -1) {\n                return; // We already have this chat tab\n            }\n\n            addTab(chatId, params);\n        }\n\n        function addTab(chatId, params) {\n            if (params.focus) {\n                dispatch({\n                    type: 'attr_remove',\n                    id: true,\n                    attr: 'active',\n                    value: {\n                        \"active\": false\n                    }\n                });\n            }\n\n            dispatch({\n                type: 'add',\n                static_order: props.static_order,\n                value: {\n                    \"id\": chatId,\n                    active: params.focus\n                }\n            });\n            loadChatTabIntro([chatId]);\n        }\n\n        function addTabBackground(chatId, params) {\n            dispatch({\n                type: 'add',\n                value: {\n                    \"id\": chatId,\n                    static_order: props.static_order,\n                    active: false,\n                    mn: 1\n                }\n            });\n            loadChatTabIntro([chatId]);\n        }\n\n        function removeTab(chatId) {\n            dispatch({\n                type: 'remove',\n                id: chatId\n            });\n        }\n\n        function tabClicked(chatId) {\n            dispatch({\n                type: 'refocus',\n                id: chatId\n            });\n        }\n\n        function chatAdminSync(data) {\n\n            dispatch({\n                type: 'group_offline',\n                value: lhinst.hidenicknamesstatus\n            })\n\n            Object.keys(data.result_status).map((key) => {\n                dispatch({\n                    type: 'update_chat',\n                    id: data.result_status[key].chat_id,\n                    value: data.result_status[key]\n                })\n            });\n\n            if (data.result !== 'false') {\n                Object.keys(data.result).map((key) => {\n                    dispatch({\n                        type: 'msg_received',\n                        id: data.result[key].chat_id,\n                        value: { msg: data.result[key].msg, mn: data.result[key].mn },\n                        order_chats: props.static_order\n                    })\n                });\n            }\n        }\n\n        function supportUnreadChat(params) {\n            if (params.id && params.unread == true) {\n                dispatch({\n                    type: 'update_chat',\n                    id: params.id,\n                    value: { support_chat: true }\n                })\n            }\n        }\n\n        function typingVisitor(params) {\n            dispatch({\n                type: 'update_chat',\n                id: params.id,\n                value: { tp: 'true', 'tx': params.txt }\n            })\n        }\n\n        function typingVisitorStopped(params) {\n            dispatch({\n                type: 'update_chat',\n                id: params.id,\n                value: { tp: 'false' }\n            })\n        }\n\n        function nodeJsVisitorStatus(params) {\n            dispatch({\n                type: 'update_chat',\n                id: params.id,\n                value: { live_status: params.status }\n            })\n        }\n\n        function activateNextTab(chatid, up) {\n            var index = chatsRef.current.chats.findIndex(x => x.active == true);\n            if (index === -1) { return; }\n            if ((chatsRef.current.chats.length - 1) > index && up == false) {\n                chatTabClick(chatsRef.current.chats[index + 1]);\n            } else if (index > 0 && up == true) {\n                chatTabClick(chatsRef.current.chats[index - 1]);\n            }\n        }\n\n        ee.addListener('chatStartTab', addTab)\n        ee.addListener('chatTabPreload', addTabPreload)\n        ee.addListener('chatStartBackground', addTabBackground)\n        ee.addListener('removeSynchroChat', removeTab)\n        ee.addListener('chatTabClicked', tabClicked)\n        ee.addListener('chatTabFocused', tabClicked)\n        ee.addListener('chatAdminSync', chatAdminSync)\n        ee.addListener('supportUnreadChat', supportUnreadChat)\n        ee.addListener('nodeJsTypingVisitor', typingVisitor)\n        ee.addListener('nodeJsTypingVisitorStopped', typingVisitorStopped)\n        ee.addListener('nodeJsVisitorStatus', nodeJsVisitorStatus)\n        ee.addListener('activateNextTab', activateNextTab)\n\n        if (localStorage) {\n            var achat_id = localStorage.getItem('achat_id');\n            if (achat_id !== null && achat_id !== '') {\n                var ids = achat_id.split(',').map(Number);\n\n                if (props.static_order == true) {\n                    ids.sort(function (a, b) { return a - b });\n                }\n\n                var entries = [];\n                ids.forEach((id) => {\n                    var el = document.getElementById('chat-tab-link-' + id);\n                    if (parseInt(id) > 0) {\n                        entries.push({ id: parseInt(id), active: el !== null && el.classList.contains('active') })\n                    }\n                });\n                dispatch({\n                    type: 'update',\n                    value: {\n                        \"chats\": entries\n                    }\n                });\n                ids.length > 0 && loadChatTabIntro(ids);\n\n                // Find active chat\n                setTimeout(() => {\n                    ids.forEach((id) => {\n                        var el = document.getElementById('chat-tab-link-' + id);\n                        if (el !== null) {\n                            el.classList.contains('active') && tabClicked(parseInt(id));\n                        }\n                    });\n                }, 1000);\n            }\n        }\n\n        // Cleanup\n        return function cleanup() {\n            ee.removeListener('chatStartTab', addTab);\n            ee.removeListener('chatStartBackground', addTabBackground);\n            ee.removeListener('removeSynchroChat', removeTab);\n            ee.removeListener('chatTabClicked', tabClicked);\n            ee.removeListener('chatTabFocused', tabClicked);\n            ee.removeListener('chatAdminSync', chatAdminSync);\n            ee.removeListener('supportUnreadChat', chatAdminSync);\n            ee.removeListener('nodeJsTypingVisitor', typingVisitor);\n            ee.removeListener('nodeJsTypingVisitorStopped', typingVisitorStopped);\n            ee.removeListener('nodeJsVisitorStatus', nodeJsVisitorStatus);\n            ee.removeListener('activateNextTab', activateNextTab);\n        };\n\n    }, []);\n\n    const chatTabClick = (chat) => {\n        if (document.getElementById('chat-tab-link-' + chat.id) !== null) {\n            $('#chat-tab-link-' + chat.id).click();\n            (new bootstrap.Tab(document.querySelector('#chat-tab-link-' + chat.id))).show();\n        } else {\n            document.location = WWW_DIR_JAVASCRIPT + 'front/default/(cid)/' + chat.id + '/#!#chat-id-' + chat.id;\n        }\n    }\n\n    const closeDialog = (e, chat) => {\n        e.preventDefault();\n        e.stopPropagation();\n        lhinst.removeDialogTab(chat.id, $('#tabs'), true);\n        lhinst.channel && lhinst.channel.postMessage({ 'action': 'close_chat', 'args': { 'chat_id': chat.id } });\n    }\n\n    const iconClick = (e, icon, chat) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (icon.has_popup) {\n            lhc.revealModal({ 'url': WWW_DIR_JAVASCRIPT + 'chat/icondetailed/' + chat.id + '/' + icon.icon_id });\n        }\n    }\n\n    const { t, i18n } = useTranslation('chat_tabs');\n\n    return (\n        <React.Fragment>\n            {(!state.chats || state.chats.length == 0) && <div className=\"text-center text-muted p-2\"><span className=\"material-icons\">chat</span>{t('chat_tabs.open_chats')}</div>}\n            {state.chats.map((chat, index) => (\n\n                <div title={chat.id} onClick={() => chatTabClick(chat)} className={\"p-1 action-image chat-tabs-row\" + (chat.active ? ' chat-tab-active' : '') + (chat.vwa ? ' long-response-chat' : '')}>\n                    <div className=\"fs12\">\n\n                        <button type=\"button\" onClick={(e) => closeDialog(e, chat)} className=\"float-end btn-link m-0 ms-1 p-0 btn btn-xs\"><i className=\"material-icons me-0\">close</i></button>\n                        {chat.dep && <span className=\"float-end text-muted text-truncate mw-80px\">\n                            {chat.cs == 0 && <span title={t('chat_tabs.pending_status')} className=\"material-icons chat-pending me-0\">chat</span>}\n                            {chat.cs == 1 && <span title={t('chat_tabs.active_status')} className=\"material-icons chat-active me-0\">chat</span>}\n                            {chat.cs == 5 && <span title={t('chat_tabs.bot_status')} className=\"material-icons chat-active me-0\">android</span>}\n                            {chat.cs == 2 && <span title={t('chat_tabs.closed_status')} className=\"material-icons chat-closed me-0\">chat</span>}\n\n                        </span>}\n\n                        <span className={\"material-icons\" + (chat.pnd_rsp == true ? ' text-danger' : ' text-success')}>{chat.pnd_rsp == true ? 'call_received' : 'call_made'}</span>\n                        {chat.adicons && chat.adicons.map((icon, index) => <span onClick={(event) => iconClick(event, icon, chat)} style={{ 'color': icon.color }} className=\"material-icons\" title={icon.title}>{icon.icon}</span>)}\n                        {chat.aicons && Object.keys(chat.aicons).map((key, index) => <span style={{ 'color': chat.aicons[key].c ? chat.aicons[key].c : \"#1d548e;\" }} className=\"material-icons\" title={chat.aicons[key].i}>{chat.aicons[key].i}</span>)}\n                        {chat.vwa && <span title={chat.vwa} className=\"d-none d-lg-inline material-icons text-danger\">timer</span>}\n                        {chat.support_chat && <span className=\"whatshot blink-ani text-warning material-icons\">whatshot</span>}<i className={\"material-icons \" + (typeof chat.live_status === \"boolean\" ? (chat.live_status === true ? 'icon-user-online' : 'icon-user-offline') : (chat.us == 2 ? \"icon-user-away\" : (chat.us == 0 ? \"icon-user-online\" : \"icon-user-offline\")))}  >{typeof chat.live_status === \"boolean\" ? (chat.live_status === true ? 'wifi' : 'wifi_off') : (chat.us == 2 ? \"wifi_1_bar\" : (chat.us == 0 ? \"wifi\" : \"wifi_off\"))}</i><i className={\"material-icons icon-user-online \" + (chat.um == 1 ? \"icon-user-offline\" : \"icon-user-online\")}>send</i>{chat.cc && <img className=\"d-none d-lg-inline\" title={chat.cn} src={chat.cc} alt=\"\" />} {(state.group_offline == false || !(chat.us != 0)) && <span className={\"small-truncate-nick \" + (chat.mn > 0 || chat.cs == 0 ? \"font-weight-bold \" : '') + (chat.cs == 0 ? 'text-danger' : '')}>{chat.nick || chat.id}</span>}{chat.mn > 0 && <span className=\"msg-nm ps-1\">({chat.mn})</span>}{chat.lmsg && <span className=\"d-none d-xl-inline text-muted\"> {chat.lmsg}</span>}\n\n\n                    </div>\n\n                    {(chat.msg || (chat.tp == 'true' && chat.tx)) && <div className=\"fs13 text-muted pt-1\">\n                        <span title={chat.tp == 'true' && chat.tx ? chat.tx : chat.msg} className={\"d-none d-lg-inline-block text-truncate mw-100 \" + (chat.mn > 0 ? 'font-weight-bold' : '') + (chat.tp == 'true' && chat.tx ? ' font-italic' : '')}>\n                            {chat.tp == 'true' && chat.tx ? chat.tx : chat.msg}\n                        </span>\n                    </div>}\n                </div>\n            ))}\n        </React.Fragment>\n    );\n}\n\nexport default DashboardChatTabs","import { useEffect, useRef } from \"react\";\n\nfunction useInterval(callback, delay) {\n    const savedCallback = useRef();\n\n    // Remember the latest callback.\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n}\n\nexport default useInterval;"],"names":["reducer","state","action","type","foundIndex","chats","findIndex","x","id","_objectSpread","value","attr","static_order","insertIndex","push","splice","unshift","active","mn","support_chat","msg","el","document","getElementById","classList","contains","group_offline","Error","props","_useReducer","useReducer","_useReducer2","_slicedToArray","dispatch","chatsRef","useRef","useEffect","current","getChatIds","chatIds","map","chat","index","loadChatTabIntro","axios","WWW_DIR_JAVASCRIPT","join","then","result","data","nodeJSStatus","live_status","textContent","useInterval","length","lmsg_id","addTab","chatId","params","focus","addTabBackground","removeTab","tabClicked","chatAdminSync","lhinst","hidenicknamesstatus","Object","keys","result_status","key","chat_id","order_chats","typingVisitor","tp","txt","typingVisitorStopped","nodeJsVisitorStatus","status","activateNextTab","chatid","up","chatTabClick","ee","addListener","unread","localStorage","achat_id","getItem","ids","split","Number","sort","a","b","entries","forEach","parseInt","setTimeout","removeListener","$","click","bootstrap","Tab","querySelector","show","location","_useTranslation","useTranslation","t","i18n","React","className","title","onClick","vwa","e","preventDefault","stopPropagation","removeDialogTab","channel","postMessage","closeDialog","dep","cs","pnd_rsp","adicons","icon","event","has_popup","lhc","revealModal","icon_id","iconClick","style","color","aicons","c","i","us","um","cc","cn","src","alt","nick","lmsg","tx","callback","delay","savedCallback","setInterval","clearInterval"],"sourceRoot":""}