{"version":3,"file":"1e854c9af6a5b0ff9769.js","mappings":"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","sources":["webpack://LiveHelperChat/./src/util/proactiveChat.js"],"sourcesContent":["import {helperFunctions} from '../lib/helperFunctions';\nimport {domEventsHandler} from '../util/domEventsHandler';\n\nclass _proactiveChat {\n\n    constructor() {\n        this.params = {};\n        this.timeoutStatuscheck = null;\n        this.timeoutActivity = null;\n        this.attributes = null;\n        this.chatEvents = null;\n        this.dynamicInvitations = [];\n\n        this.iddleTimeoutActivity = null;\n        this.checkMessageTimeout = null;\n        this.nextRescheduleTimeout = null;\n        this.initCall = true;\n        this.inProgress = false;\n    }\n\n    setParams(params, attributes, chatEvents) {\n        this.params = params;\n        this.attributes = attributes;\n        this.chatEvents = chatEvents;\n\n        if (this.attributes.events.length > 0) {\n            this.storeEvents(this.attributes.events);\n        } else {\n            this.initInvitation();\n        }\n\n        if (this.attributes.conversion != '') {\n            this.storeConversion(this.attributes.conversion);\n        }\n\n        // check invitaiton then tag is added\n        this.attributes.eventEmitter.addListener('tagAdded', () => {\n            this.initInvitation({init: 0});\n        });\n\n        this.attributes.eventEmitter.addListener('eventAdded', () => {\n            this.storeEvents(this.attributes.events);\n        });\n\n        this.attributes.eventEmitter.addListener('conversionAdded', () => {\n            this.storeConversion(this.attributes.conversion);\n        });\n\n        this.attributes.eventEmitter.addListener('checkMessageOperator', () => {\n            this.initInvitation({init: 0});\n        });\n\n        this.attributes.eventEmitter.addListener('endChat', () => {\n             this.initInvitation({init: 0});\n        });\n\n        this.attributes.onlineStatus.subscribe((data) => {\n            if (data == true) {\n                this.initInvitation({init: 0});\n            } else {\n                const chatParams = this.attributes['userSession'].getSessionAttributes();\n                if (!chatParams['id'] && this.attributes.proactive.invitation) {\n                    this.attributes.proactive = {};\n                    if (this.attributes.mainWidget.isLoaded !== false) {\n                        this.chatEvents.sendChildEvent('proactive', [{}]);\n                    }\n                    this.attributes.mainWidget.hideInvitation();\n                    this.attributes.eventEmitter.emitEvent('closeWidget', [{'sender' : 'closeButton'}]);\n                }\n            }\n        });\n    }\n\n    showInvitation(params, init) {\n        const chatParams = this.attributes['userSession'].getSessionAttributes();\n\n        // Show invitation only if widget is not open\n        if ((init === 0 && (this.attributes.widgetStatus.value === true && !this.attributes.mode == 'embed')) || chatParams['id']) {\n            return;\n        }\n\n        if (params.inject_html && params.invitation) {\n            var th = document.getElementsByTagName('head')[0];\n            var s = document.createElement('script');\n            s.setAttribute('type','text/javascript');\n            s.setAttribute('src', this.attributes.LHC_API.args.lhc_base_url + this.attributes['lang'] + 'chat/htmlsnippet/'+params.invitation+'/inv/0/?ts='+Date.now());\n            th.appendChild(s);\n        }\n\n        if (!params.only_inject) {\n            this.attributes.proactive = params;\n\n            if (this.attributes.mainWidget.isLoaded === false) {\n                this.attributes.mainWidget.bootstrap();\n            } else {\n                this.chatEvents.sendChildEvent('proactive', [params]);\n            }\n\n            clearTimeout(this.checkMessageTimeout);\n            clearTimeout(this.nextRescheduleTimeout);\n        }\n    }\n\n    storeEvents(events) {\n        const chatParams = this.attributes['userSession'].getSessionAttributes();\n        if (!chatParams['id'] && this.attributes['onlineStatus'].value == true) {\n            helperFunctions.makeRequest(this.attributes.LHC_API.args.lhc_base_url + this.attributes['lang'] + 'chat/logevent/(vid)/' + this.attributes.userSession.getVID(), {params: {'data' : JSON.stringify(events)}}, (data) => {\n                this.initInvitation({init: 0});\n            })\n        }\n    }\n\n    storeConversion(conversion) {\n        const chatParams = this.attributes['userSession'].getSessionAttributes();\n        if (!chatParams['id'] && this.attributes['onlineStatus'].value == true) {\n            helperFunctions.makeRequest(this.attributes.LHC_API.args.lhc_base_url + this.attributes['lang'] + 'widgetrestapi/logconversions/(vid)/' + this.attributes.userSession.getVID(), {params: {'data' : JSON.stringify(conversion)}}, (data) => {\n\n            });\n        }\n    }\n\n    initInvitation(paramsExecution) {\n\n        if (this.inProgress == true) {\n            return ;\n        }\n\n        clearTimeout(this.checkMessageTimeout);\n\n        const chatParams = this.attributes['userSession'].getSessionAttributes();\n\n        const init = (paramsExecution && paramsExecution['init'] === 0) ? 0 : 1;\n\n        if (!chatParams['id'] && this.attributes['onlineStatus'].value == true) {\n\n            this.inProgress = true;\n\n            let params = {\n                'vid': this.attributes.userSession.getVID(),\n                'dep': this.attributes.department.join(',')\n            };\n\n            if (this.attributes.LHC_API.args.priority) {\n                params['priority'] = this.attributes.LHC_API.args.priority;\n            }\n\n            if (this.attributes.LHC_API.args.operator) {\n                params['operator'] = this.attributes.LHC_API.args.operator;\n            }\n\n            if (this.attributes['identifier']) {\n                params['idnt'] = this.attributes['identifier']\n            }\n\n            if (this.attributes['tag']) {\n                params['tag'] = this.attributes['tag']\n            }\n\n            if (this.attributes['langOverride']) {\n                params['lang'] = this.attributes['langOverride']\n            }\n\n            params['l'] = encodeURIComponent(window.location.href.substring(window.location.protocol.length));\n            params['dt'] = encodeURIComponent(document.title);\n            params['init'] = this.initCall == true ? 1 : init;\n\n            this.initCall = false;\n\n            helperFunctions.makeRequest(this.attributes.LHC_API.args.lhc_base_url + this.attributes['lang'] + 'widgetrestapi/checkinvitation', {params: params}, (data) => {\n\n                this.inProgress = false;\n                \n                if (data.invitation) {\n                    const params = {'vid_id' : data.vid_id, 'invitation' : data.invitation, 'inject_html' :  data.inject_html, 'qinv' : data.qinv};\n                    setTimeout(() => {\n                        this.showInvitation(params, init);\n                    }, this.attributes.widgetStatus.value === true ? 0 : (data.delay ? data.delay + this.attributes['status_delay'] : this.attributes['status_delay']));\n                } else {\n                    if (this.attributes.LHC_API.args.check_messages) {\n                        this.checkMessageTimeout = setTimeout(() => {\n                            this.initInvitation({init: 0});\n                        },this.params['interval'] * 1000);\n                    }\n                }\n\n                if (data.next_reschedule) {\n                    this.nextRescheduleTimeout = setTimeout(() => {\n                        this.initInvitation({init: 0});\n                    }, data.next_reschedule);\n                }\n\n                if (data.dynamic) {\n                    data.dynamic.forEach((item) => {\n                        this.dynamicInvitations.push(item.id);\n                        if (item.type === 1) {\n                            domEventsHandler.listen(document, 'mouseout', (e) => {\n                                e = e ? e : window.event;\n                                var from = e.relatedTarget || e.toElement;\n                                if (!from || from.nodeName == \"HTML\") {\n                                    this.showInvitation({'vid_id' : data.vid_id, 'invitation' : item.id, 'inject_html' :  item.inject_html, 'qinv' : data.qinv, 'only_inject' : item.only_inject});\n                                    if (!item.every_time) {\n                                        domEventsHandler.unlisten('lhc_inv_mouse_out_'+item.id);\n                                    }\n                                }\n                            }, 'lhc_inv_mouse_out_' + item.id);\n                        } else if (item.type === 2) {\n\n                            var iddleTimeout = () => {\n\n                                this.showInvitation({'vid_id' : data.vid_id, 'invitation' : item.id, 'inject_html' :  item.inject_html, 'qinv' : data.qinv, 'only_inject' : item.only_inject});\n\n                                clearTimeout(this.iddleTimeoutActivity);\n\n                                if (!item.every_time) {\n                                    ['mousemove','mousedown','click','scroll','keypress','load'].forEach((element) => {\n                                        domEventsHandler.unlisten('lhc_inv_iddl_win_'+element);\n                                    });\n\n                                    ['mousemove','scroll','touchstart','touchend'].forEach((element) => {\n                                        domEventsHandler.unlisten('lhc_inv_iddl_doc_'+element);\n                                    });\n                                }\n                            };\n\n                            this.iddleTimeoutActivityReset = () => {\n                                clearTimeout(this.iddleTimeoutActivity);\n                                this.iddleTimeoutActivity = setTimeout( () => { iddleTimeout(); }, item.iddle_for *1000);\n                            }\n\n                            this.iddleTimeoutActivityReset();\n\n                            ['mousemove','mousedown','click','scroll','keypress','load'].forEach((event) => {\n                                    domEventsHandler.listen(window, event, this.iddleTimeoutActivityReset, 'lhc_inv_iddl_win_'+event);\n                            });\n\n                            ['mousemove','scroll','touchstart','touchend'].forEach((event) => {\n                                domEventsHandler.listen(document, event, this.iddleTimeoutActivityReset, 'lhc_inv_iddl_doc_'+event);\n                            });\n                        }\n                    })\n                }\n            });\n        }\n    }\n}\n\nconst proactiveChat = new _proactiveChat();\nexport {proactiveChat};\n\n"],"names":["proactiveChat","_proactiveChat","_classCallCheck","this","params","timeoutStatuscheck","timeoutActivity","attributes","chatEvents","dynamicInvitations","iddleTimeoutActivity","checkMessageTimeout","nextRescheduleTimeout","initCall","inProgress","_createClass","key","value","_this","events","length","storeEvents","initInvitation","conversion","storeConversion","eventEmitter","addListener","init","onlineStatus","subscribe","data","getSessionAttributes","proactive","invitation","mainWidget","isLoaded","sendChildEvent","hideInvitation","emitEvent","chatParams","widgetStatus","mode","inject_html","th","document","getElementsByTagName","s","createElement","setAttribute","LHC_API","args","lhc_base_url","Date","now","appendChild","only_inject","bootstrap","clearTimeout","_this2","helperFunctions","makeRequest","userSession","getVID","JSON","stringify","paramsExecution","_this3","department","join","priority","operator","encodeURIComponent","window","location","href","substring","protocol","title","vid_id","qinv","setTimeout","showInvitation","delay","check_messages","next_reschedule","dynamic","forEach","item","push","id","type","domEventsHandler","listen","e","from","event","relatedTarget","toElement","nodeName","every_time","unlisten","iddleTimeoutActivityReset","element","iddle_for"],"sourceRoot":""}