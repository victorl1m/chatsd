{"version":3,"file":"476.b9b0173e4616fdc74e11.js","mappings":"i2BAQoC,IAQ9BA,GANLC,EAAAA,EAAAA,KAAQ,SAACC,GACN,MAAO,CACHC,WAAYD,EAAMC,WAE1B,GAAEC,CAAAC,EAAA,SAAAC,IAAAC,EAAAA,EAAAA,GAAAP,EAAAM,GAAA,I,IAAAE,G,EAAAR,E,gaAIE,SAAAA,EAAYS,GAAO,IAAAC,EAU0B,OAV1BC,EAAAA,EAAAA,GAAA,KAAAX,IACfU,EAAAF,EAAAI,KAAA,KAAMH,IAEDI,MAAQ,CAAC,EAEdH,EAAKI,sBAELJ,EAAKK,aAAeL,EAAKK,aAAaC,MAAIC,EAAAA,EAAAA,GAAAP,IAC1CA,EAAKQ,oBAAsBR,EAAKQ,oBAAoBF,MAAIC,EAAAA,EAAAA,GAAAP,IACxDA,EAAKS,0BAA4BT,EAAKS,0BAA0BH,MAAIC,EAAAA,EAAAA,GAAAP,IACpEA,EAAKU,SAAWV,EAAKU,SAASJ,MAAIC,EAAAA,EAAAA,GAAAP,IAAOA,CAC7C,CA+NC,OA/NAW,EAAAA,EAAAA,GAAArB,EAAA,EAAAsB,IAAA,sBAAAC,MAED,SAAoBC,GAEhBC,KAAKhB,MAAMiB,UAASC,EAAAA,EAAAA,IAAgB,CAChC,WAAaF,KAAKhB,MAAMN,WAAWyB,IAAI,cACvC,MAAUH,KAAKhB,MAAMN,WAAWyB,IAAI,SACpC,KAASH,KAAKhB,MAAMN,WAAWyB,IAAI,QACnC,OAAWH,KAAKhB,MAAMN,WAAWyB,IAAI,UACrC,WAAeH,KAAKhB,MAAMN,WAAWyB,IAAI,cACzC,OAAW,EACX,YAAiBJ,GAAeC,KAAKhB,MAAMN,WAAWyB,IAAI,sBAAwB,IAE1F,GAAC,CAAAN,IAAA,eAAAC,MAED,SAAaM,GAET,IAAIC,EAASL,KAAKZ,MACdkB,GAAU,EACRC,EAAW,IAAIC,cAES,IAAnBH,EAAa,OACpBC,GAAU,EACVC,EAASE,OAAO,OAAQJ,EAAa,KAAGA,EAAa,KAAEK,OAG3DL,EAAc,MAAIL,KAAKhB,MAAMN,WAAWyB,IAAI,UAC5CE,EAAO,WAAaL,KAAKhB,MAAMN,WAAWiC,MAAM,CAAC,UAAU,UAAYX,KAAKhB,MAAMN,WAAWiC,MAAM,CAAC,UAAU,OAC9GN,EAAkB,UAAIL,KAAKhB,MAAMN,WAAWiC,MAAM,CAAC,UAAU,OAC7DN,EAAsB,cAAIO,EAAAA,EAAgBC,cAC1CR,EAAiB,SAAI,GACrB,IACI,IAAIS,EAAaC,OAAOC,OAAOC,WAAaF,OAAOC,OAAOA,OAAOC,SAGjE,QAFyC,IAAlBF,OAAOG,SAAqD,SAA1BH,OAAOG,QAAc,MAA0C,SAA1BH,OAAOG,QAAc,MAAoC,OAAlBH,OAAOI,QAAmBJ,OAAOC,OAAOG,OAEzKL,EACAT,EAAiB,SAAIW,OAAOC,SAASG,KAAKC,UAAUL,OAAOC,SAASK,SAASC,YAC1E,CACH,IAAIC,EAAa,KAEbA,EADkB,OAAlBT,OAAOI,OACMJ,OAAOI,OAEPJ,OAAOC,OAExBX,EAAiB,SAAImB,EAAWP,SAASG,KAAKC,UAAUG,EAAWP,SAASK,SAASC,OACzF,CAEJ,CAAE,MAAOE,GACL,IACIpB,EAAiB,SAAIqB,OAAOX,OAAOY,SAASV,SAChD,CAAE,MAAOQ,GACL,CAER,CAE0B,SAAtBpB,EAAiB,WACjBA,EAAiB,SAAI,IAGzBA,EAAU,EAAIL,KAAKhB,MAAMN,WAAWyB,IAAI,WAEK,IAAzCH,KAAKhB,MAAMN,WAAWyB,IAAI,cAC1BE,EAAiB,SAAIL,KAAKhB,MAAMN,WAAWyB,IAAI,aAGL,OAA1CH,KAAKhB,MAAMN,WAAWyB,IAAI,cAC1BE,EAAiB,SAAIL,KAAKhB,MAAMN,WAAWyB,IAAI,aAGnD,IAAMyB,EAAehB,EAAAA,EAAgBiB,sBAAsB7B,KAAKhB,MAAMN,WAAWiC,MAAM,CAAC,aAAa,YAChF,OAAjBiB,IACAvB,EAAMyB,EAAAA,EAAA,GAAOzB,GAAWuB,IAG5B,IAAIG,EAAa,CACb,WAAc/B,KAAKhB,MAAMN,WAAWyB,IAAI,cACxC,MAAUH,KAAKhB,MAAMN,WAAWyB,IAAI,SACpC,KAASH,KAAKhB,MAAMN,WAAWyB,IAAI,QACnC,IAAQH,KAAKhB,MAAMN,WAAWyB,IAAI,OAClC,OAAWE,GAGXC,GACAC,EAASE,OAAO,WAAYuB,KAAKC,UAAUF,IAG/C/B,KAAKhB,MAAMiB,UAASiC,EAAAA,EAAAA,IAAkB5B,EAAUC,EAAWwB,IAC3D3B,EAAM+B,gBACV,GAAC,CAAAtC,IAAA,sBAAAC,MAED,SAAoBsC,GAAK,IAAAC,EAAA,KACjBC,EAAetC,KAAKZ,MACxBkD,EAAaF,EAAIG,IAAMH,EAAItC,MAC3BE,KAAKwC,SAASF,GAEA,iBAAVF,EAAIG,IACAvC,KAAKhB,MAAMN,WAAWiC,MAAM,CAAC,cAAc,aAAa,gBAAgB8B,KAAO,GAC/EzC,KAAKhB,MAAMN,WAAWiC,MAAM,CAAC,cAAc,aAAa,gBAAgB+B,KAAI,SAAAC,GACpEA,EAAIxC,IAAI,UAAYiC,EAAItC,QACC,GAArB6C,EAAIxC,IAAI,YACRkC,EAAKrD,MAAMiB,SAAS,CAAC,KAAS,cAAe2C,KAAOR,EAAItC,QACxDuC,EAAKrD,MAAMiB,SAAS,CAAC,KAAS,eAAgB2C,MAAO,KAIrDP,EAAKrD,MAAMN,WAAWiC,MAAM,CAAC,aAAa,eAAiByB,EAAItC,OAC/DuC,EAAKhD,oBAAoB+C,EAAItC,OAIzC,GAGZ,GAAC,CAAAD,IAAA,oBAAAC,MAED,WACIc,EAAAA,EAAgBiC,cAAc7C,KAClC,GAAC,CAAAH,IAAA,4BAAAC,MAED,SAA0BsC,GACtBpC,KAAKhB,MAAMiB,SAAS,CAAC,KAAS,qBAAsB2C,KAAO,CAACL,GAAKH,EAAIU,MAAM3C,IAAI,SAAUL,MAAQsC,EAAItC,QACzG,GAAC,CAAAD,IAAA,WAAAC,MAED,WACIE,KAAKhB,MAAMiB,SAAS,CAAC8C,KAAO,WAAYC,KAAO,CAAC,iBAAkBJ,MAAM,GAC5E,GAAC,CAAA/C,IAAA,qBAAAC,MAED,SAAmBmD,EAAWC,EAAWC,GACrC,GAAIxB,SAASyB,eAAe,sBAAuB,CAE/C,IAAIC,EAAgB,EAEhB1B,SAASyB,eAAe,2BACxBC,EAAgB1B,SAASyB,eAAe,yBAAyBE,cAGrE1C,EAAAA,EAAgB2C,kBAAkB,eAAgB,CAAC,CAC/C,OAAW5B,SAASyB,eAAe,sBAAsBE,aAAeD,EAAgB,KAEhG,CACJ,GAAC,CAAAxD,IAAA,SAAAC,MAED,WAAS,IAAA0D,EAAA,KAEGC,EAAMzD,KAAKhB,MAAXyE,EAER,IAA+D,IAA3DzD,KAAKhB,MAAMN,WAAWiC,MAAM,CAAC,cAAc,cAAoF,IAA5DX,KAAKhB,MAAMN,WAAWiC,MAAM,CAAC,cAAc,aAC9G,OACI+C,EAAAA,cAAA,OAAKC,UAAU,yBAAyBC,KAAK,SACxCH,EAAE,iCAKf,IAA+D,IAA3DzD,KAAKhB,MAAMN,WAAWiC,MAAM,CAAC,cAAc,YAE3C,OAAO,KAGX,GAAIX,KAAKhB,MAAMN,WAAWiC,MAAM,CAAC,UAAU,aACvC,OAAO+C,EAAAA,cAACG,EAAAA,EAAS,CAACC,UAAWL,EAAE,gBAAiBM,aAAa,EAAMC,MAAO,SAACvC,GAAC,OAAK+B,EAAKxE,MAAMiB,UAASgE,EAAAA,EAAAA,KAAe,GAAM,EAAEC,SAAS,EAAMC,KAAMnE,KAAKhB,MAAMN,WAAWiC,MAAM,CAAC,UAAU,eAG5L,GAAIX,KAAKhB,MAAMN,WAAWiC,MAAM,CAAC,cAAc,WAAW8B,KAAO,EAC7D,IAAI2B,EAAepE,KAAKhB,MAAMN,WAAWiC,MAAM,CAAC,cAAc,WAAW+B,KAAI,SAAAI,GAAK,OAAGY,EAAAA,cAACW,EAAAA,EAAS,CAACC,OAAQd,EAAKxE,MAAMN,WAAWyB,IAAI,WAAYoE,UAAWf,EAAKxE,MAAMN,WAAW8F,MAAM,CAAC,mBAAmB1B,EAAM3C,IAAI,gBAAiBsE,YAAa,CAAC,mBAAuBjB,EAAKxE,MAAMN,WAAWyB,IAAI,sBAAuB,aAAiBqD,EAAKxE,MAAMN,WAAWyB,IAAI,iBAAkBuE,kBAAmBlB,EAAKpE,MAAM0D,EAAM3C,IAAI,UAAY2C,EAAM3C,IAAI,SAAUwE,gBAAiBnB,EAAK/D,oBAAqBqD,MAAOA,GAAS,SAEtfsB,EAAe,GAGvB,GAAIpE,KAAKhB,MAAMN,WAAWiC,MAAM,CAAC,aAAa,WAAW8B,KAAO,EAC5D,IAAImC,EAAqB5E,KAAKhB,MAAMN,WAAWiC,MAAM,CAAC,aAAa,WAAW+B,KAAI,SAAAI,GAAK,OAAGY,EAAAA,cAACW,EAAAA,EAAS,CAACC,OAAQd,EAAKxE,MAAMN,WAAWyB,IAAI,WAAYN,IAAKiD,EAAM3C,IAAI,cAAeoE,UAAWf,EAAKxE,MAAMN,WAAW8F,MAAM,CAAC,mBAAmB1B,EAAM3C,IAAI,gBAAiBuE,kBAAmB5B,EAAM3C,IAAI,SAAUwE,gBAAiBnB,EAAK9D,0BAA2BoD,MAAOA,GAAS,SAE3W8B,EAAqB,GAG7B,OAAkD,GAA9C5E,KAAKhB,MAAMN,WAAWyB,IAAI,kBAAuE,GAA9CH,KAAKhB,MAAMN,WAAWyB,IAAI,iBAEvEuD,EAAAA,cAAA,OAAKnB,GAAG,sBACLvC,KAAKhB,MAAMN,WAAWyB,IAAI,mBAAqBH,KAAKhB,MAAMN,WAAW8F,MAAM,CAAC,UAAU,mBAAsBxE,KAAKhB,MAAMN,WAAW8F,MAAM,CAAC,UAAU,sBAAuF,IAA/DxE,KAAKhB,MAAMN,WAAWiC,MAAM,CAAC,UAAU,uBAAgC+C,EAAAA,cAAA,OAAKC,UAAU,mCAAmCkB,wBAAyB,CAACC,QAAQ9E,KAAKhB,MAAMN,WAAW8F,MAAM,CAAC,UAAU,kBAAoBxE,KAAKhB,MAAMN,WAAWiC,MAAM,CAAC,UAAU,kBAAoB,KAAOX,KAAKhB,MAAMN,WAAW8F,MAAM,CAAC,UAAU,qBAAuBxE,KAAKhB,MAAMN,WAAWiC,MAAM,CAAC,UAAU,qBAAuB,OAE/jBX,KAAKhB,MAAMN,WAAWyB,IAAI,kBAAoBH,KAAKhB,MAAMN,WAAW8F,MAAM,CAAC,UAAU,mBAAiF,IAA5DxE,KAAKhB,MAAMN,WAAWiC,MAAM,CAAC,UAAU,mBAA2B+C,EAAAA,cAAA,KAAGC,UAAU,4CAA4CkB,wBAAyB,CAACC,OAAO9E,KAAKhB,MAAMN,WAAWiC,MAAM,CAAC,UAAU,sBAE5SX,KAAKhB,MAAMN,WAAWyB,IAAI,kBAAoBuD,EAAAA,cAAA,KAAGC,UAAU,6CAA6C3D,KAAKhB,MAAMN,WAAWiC,MAAM,CAAC,UAAU,sBAEhJX,KAAKhB,MAAMN,WAAWyB,IAAI,kBAC3BuD,EAAAA,cAAA,OAAKC,UAAU,mBACXD,EAAAA,cAAA,QAAMqB,SAAU/E,KAAKV,aAAcqE,UAAU,gBACzCD,EAAAA,cAAA,OAAKC,UAAU,YACVS,EACAQ,EACA5E,KAAKhB,MAAMN,WAAW8F,MAAM,CAAC,cAAc,gBAAkBd,EAAAA,cAACsB,EAAAA,EAAc,CAACN,kBAAmB1E,KAAKZ,MAAqB,cAAG6F,gBAAiBjF,KAAKhB,MAAMN,WAAWyB,IAAI,qBAAsBwE,gBAAiB3E,KAAKP,oBAAqB8E,UAAWvE,KAAKhB,MAAMN,WAAW8F,MAAM,CAAC,mBAAmB,eAAgBU,YAAalF,KAAKhB,MAAMN,WAAWiC,MAAM,CAAC,cAAc,oBAE9WX,KAAKhB,MAAMN,WAAW8F,MAAM,CAAC,UAAU,cAAuC,KAAvBI,GAA8C,KAAjBR,IAAwBV,EAAAA,cAAA,OAAKC,UAAU,OAC1HD,EAAAA,cAAA,OAAKC,UAAU,eACXD,EAAAA,cAAA,UAAQX,KAAK,SAASoC,SAAwD,GAA9CnF,KAAKhB,MAAMN,WAAWyB,IAAI,iBAAuBwD,UAAU,4BAA0E,GAA9C3D,KAAKhB,MAAMN,WAAWyB,IAAI,kBAAyBuD,EAAAA,cAAA,KAAGC,UAAU,kBAAiB,KAAc3D,KAAKhB,MAAMN,WAAWiC,MAAM,CAAC,UAAU,yBAA2B8C,EAAE,gCAC/O,IAA1CzD,KAAKhB,MAAMN,WAAWyB,IAAI,cAAuE,IAA/CH,KAAKhB,MAAMN,WAAWyB,IAAI,kBAA6BuD,EAAAA,cAAA,UAAQX,KAAK,SAASqC,QAASpF,KAAKL,SAAUgE,UAAU,4CAA2C,KAASF,EAAE,6BAS3L,GAA9CzD,KAAKhB,MAAMN,WAAWyB,IAAI,iBAE7BuD,EAAAA,cAAA,OAAKnB,GAAG,sBAEPvC,KAAKhB,MAAMN,WAAW8F,MAAM,CAAC,UAAU,sBAAuF,IAA/DxE,KAAKhB,MAAMN,WAAWiC,MAAM,CAAC,UAAU,sBAA8B+C,EAAAA,cAAA,OAAKC,UAAU,mCAAmCkB,wBAAyB,CAACC,OAAO9E,KAAKhB,MAAMN,WAAWiC,MAAM,CAAC,UAAU,wBAE9PX,KAAKhB,MAAMN,WAAW8F,MAAM,CAAC,UAAU,mBAAiF,IAA5DxE,KAAKhB,MAAMN,WAAWiC,MAAM,CAAC,UAAU,mBAA2B+C,EAAAA,cAAA,KAAGC,UAAU,iEAAiEkB,wBAAyB,CAACC,OAAO9E,KAAKhB,MAAMN,WAAWiC,MAAM,CAAC,UAAU,qBAEjR+C,EAAAA,cAAA,OAAKC,UAAU,mBACXD,EAAAA,cAAA,OAAKC,UAAU,OACXD,EAAAA,cAAA,OAAKC,UAAU,UACXD,EAAAA,cAAA,KAAGC,UAAU,OAAOkB,wBAAyB,CAACC,OAAO9E,KAAKhB,MAAMN,WAAWiC,MAAM,CAAC,UAAU,oBAAsB8C,EAAE,iDAXrI,CAmBX,KAAClF,CAAA,CA9OH,CAEwB8G,EAAAA,aAASzG,EA+OnC,WAAe0G,EAAAA,EAAAA,IAAf,CAAiC/G,E","sources":["webpack://LHCReactAPP/./src/components/OfflineChat.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport ChatField from './ChatField';\nimport StartChat from './StartChat';\nimport { withTranslation } from 'react-i18next';\nimport { initOfflineForm, submitOfflineForm, minimizeWidget } from \"../actions/chatActions\"\nimport { helperFunctions } from \"../lib/helperFunctions\";\nimport ChatDepartment from './ChatDepartment';\nimport ChatAbort from './ChatAbort';\n\n@connect((store) => {\n    return {\n        chatwidget: store.chatwidget\n    };\n})\n\nclass OfflineChat extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n        \n        this.initOfflineFormCall();\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleContentChange = this.handleContentChange.bind(this);\n        this.handleContentChangeCustom = this.handleContentChangeCustom.bind(this);\n        this.goToChat = this.goToChat.bind(this);\n    }\n\n    initOfflineFormCall(dep_default){\n        // Init offline form with all attributes\n        this.props.dispatch(initOfflineForm({\n            'department':this.props.chatwidget.get('department'),\n            'theme' : this.props.chatwidget.get('theme'),\n            'mode' : this.props.chatwidget.get('mode'),\n            'bot_id' : this.props.chatwidget.get('bot_id'),\n            'trigger_id' : this.props.chatwidget.get('trigger_id'),\n            'online' : 0,\n            'dep_default' : (dep_default || this.props.chatwidget.get('departmentDefault') || 0),\n        }));\n    }\n\n    handleSubmit(event) {\n\n        var fields = this.state;\n        var hasFile = false;\n        const formData = new FormData();\n\n        if (typeof fields['File'] !== 'undefined') {\n            hasFile = true;\n            formData.append(\"File\", fields['File'], fields['File'].name);\n        }\n\n        fields['jsvar'] = this.props.chatwidget.get('jsVars');\n        fields['captcha_' + this.props.chatwidget.getIn(['captcha','hash'])] = this.props.chatwidget.getIn(['captcha','ts']);\n        fields['tscaptcha'] = this.props.chatwidget.getIn(['captcha','ts']);\n        fields['user_timezone'] = helperFunctions.getTimeZone();\n        fields['URLRefer'] = '';\n        try {\n            var iframeMode = window.parent.location !== window.parent.parent.location;\n            var popupMode = typeof window.lhcChat != 'undefined' && (window.lhcChat['mode'] == 'popup' || window.lhcChat['mode'] == 'embed') && (window.opener !== null || window.parent.opener !== null);\n\n            if (iframeMode) {\n                fields['URLRefer'] = parent.location.href.substring(parent.location.protocol.length);\n            } else {\n                var instWindow = null;\n                if (window.opener !== null) {\n                    instWindow = window.opener;\n                } else {\n                    instWindow = window.parent;\n                }\n                fields['URLRefer'] = instWindow.location.href.substring(instWindow.location.protocol.length);\n            }\n\n        } catch (e) {\n            try {\n                fields['URLRefer'] = String(window.document.location);\n            } catch (e) {\n                // Do nothing\n            }\n        }\n\n        if (fields['URLRefer'] == 'blank') {\n            fields['URLRefer'] = ''\n        }\n\n        fields['r'] = this.props.chatwidget.get('ses_ref');\n\n        if (this.props.chatwidget.get('operator') != '') {\n            fields['operator'] = this.props.chatwidget.get('operator');\n        }\n        \n        if (this.props.chatwidget.get('priority') !== null) {\n            fields['priority'] = this.props.chatwidget.get('priority');\n        }\n\n        const customFields = helperFunctions.getCustomFieldsSubmit(this.props.chatwidget.getIn(['customData','fields']));\n        if (customFields !== null) {\n            fields = {...fields, ...customFields};\n        }\n\n        let submitData = {\n            'department': this.props.chatwidget.get('department'),\n            'theme' : this.props.chatwidget.get('theme'),\n            'mode' : this.props.chatwidget.get('mode'),\n            'vid' : this.props.chatwidget.get('vid'),\n            'fields' : fields\n        };\n\n        if (hasFile) {\n            formData.append('document', JSON.stringify(submitData));\n        }\n\n        this.props.dispatch(submitOfflineForm(hasFile ? formData : submitData));\n        event.preventDefault();\n    }\n\n    handleContentChange(obj) {\n        var currentState = this.state;\n        currentState[obj.id] = obj.value;\n        this.setState(currentState);\n\n        if (obj.id == 'DepartamentID') {\n            if (this.props.chatwidget.getIn(['offlineData','department','departments']).size > 0){\n                this.props.chatwidget.getIn(['offlineData','department','departments']).map(dep => {\n                    if (dep.get('value') == obj.value) {\n                        if (dep.get('online') == true) {\n                            this.props.dispatch({'type' : 'dep_default', data : obj.value});\n                            this.props.dispatch({'type' : 'onlineStatus', data : true});\n                        }\n\n                        // Update online fields settings if different department\n                        if (this.props.chatwidget.getIn(['onlineData','dep_forms']) != obj.value) {\n                            this.initOfflineFormCall(obj.value);\n                        }\n\n                    }\n                })\n            }\n        }\n    }\n\n    componentDidMount() {\n        helperFunctions.prefillFields(this);\n    }\n\n    handleContentChangeCustom(obj) {\n        this.props.dispatch({'type' : 'CUSTOM_FIELDS_ITEM', data : {id : obj.field.get('index'), value : obj.value}});\n    }\n\n    goToChat() {\n        this.props.dispatch({type : 'attr_set', attr : ['isOfflineMode'], data: false});\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (document.getElementById('id-container-fluid')) {\n\n            var headerContent = 0;\n\n            if (document.getElementById('widget-header-content')){\n                headerContent = document.getElementById('widget-header-content').offsetHeight;\n            }\n\n            helperFunctions.sendMessageParent('widgetHeight', [{\n                'height' : document.getElementById('id-container-fluid').offsetHeight + headerContent + 10\n            }]);\n        }\n    }\n    \n    render() {\n\n        const { t } = this.props;\n\n        if (this.props.chatwidget.getIn(['offlineData','fetched']) === true && this.props.chatwidget.getIn(['offlineData','disabled']) === true) {\n            return (\n                <div className=\"alert alert-danger m-2\" role=\"alert\">\n                    {t('start_chat.cant_start_a_chat')}\n                </div>\n            )\n        }\n\n        if (this.props.chatwidget.getIn(['offlineData','fetched']) === false)\n        {\n            return null;\n        }\n\n        if (this.props.chatwidget.getIn(['chat_ui','disabled'])) {\n            return <ChatAbort closeText={t('button.close')} full_height={true} close={(e) => this.props.dispatch(minimizeWidget(true))} as_html={true} text={this.props.chatwidget.getIn(['chat_ui','disabled'])} />;\n        }\n\n        if (this.props.chatwidget.getIn(['offlineData','fields']).size > 0) {\n            var mappedFields = this.props.chatwidget.getIn(['offlineData','fields']).map(field =><ChatField chatUI={this.props.chatwidget.get('chat_ui')} isInvalid={this.props.chatwidget.hasIn(['validationErrors',field.get('identifier')])} attrPrefill={{'attr_prefill_admin' : this.props.chatwidget.get('attr_prefill_admin'), 'attr_prefill' : this.props.chatwidget.get('attr_prefill')}} defaultValueField={this.state[field.get('name')] || field.get('value')} onChangeContent={this.handleContentChange} field={field} />);\n        } else {\n            var mappedFields = \"\";\n        }\n\n        if (this.props.chatwidget.getIn(['customData','fields']).size > 0) {\n            var mappedFieldsCustom = this.props.chatwidget.getIn(['customData','fields']).map(field =><ChatField chatUI={this.props.chatwidget.get('chat_ui')} key={field.get('identifier')} isInvalid={this.props.chatwidget.hasIn(['validationErrors',field.get('identifier')])} defaultValueField={field.get('value')} onChangeContent={this.handleContentChangeCustom} field={field} />);\n        } else {\n            var mappedFieldsCustom = \"\";\n        }\n\n        if (this.props.chatwidget.get('processStatus') == 0 || this.props.chatwidget.get('processStatus') == 1) {\n            return (\n                  <div id=\"id-container-fluid\">\n                    {this.props.chatwidget.get('leave_message') && (this.props.chatwidget.hasIn(['chat_ui','pre_chat_html']) || (this.props.chatwidget.hasIn(['chat_ui','operator_profile']) && this.props.chatwidget.getIn(['chat_ui','operator_profile']) != '')) && <div className=\"py-2 px-3 offline-intro-operator\" dangerouslySetInnerHTML={{__html:(this.props.chatwidget.hasIn(['chat_ui','pre_chat_html']) ? this.props.chatwidget.getIn(['chat_ui','pre_chat_html']) : '') + (this.props.chatwidget.hasIn(['chat_ui','operator_profile']) ? this.props.chatwidget.getIn(['chat_ui','operator_profile']) : '')}}></div>}\n\n                    {this.props.chatwidget.get('leave_message') && this.props.chatwidget.hasIn(['chat_ui','offline_intro']) && this.props.chatwidget.getIn(['chat_ui','offline_intro']) != '' && <p className=\"pb-1 mb-0 pt-2 px-3 fw-bold offline-intro\" dangerouslySetInnerHTML={{__html:this.props.chatwidget.getIn(['chat_ui','offline_intro'])}}></p>}\n\n                    {!this.props.chatwidget.get('leave_message') && <p className=\"pb-1 mb-0 pt-2 px-3 fw-bold offline-intro\">{this.props.chatwidget.getIn(['chat_ui','chat_unavailable'])}</p>}\n\n                    {this.props.chatwidget.get('leave_message') &&\n                    <div className=\"container-fluid\" >\n                        <form onSubmit={this.handleSubmit} className=\"offline-form\">\n                            <div className=\"row pt-2\">\n                                {mappedFields}\n                                {mappedFieldsCustom}\n                                {this.props.chatwidget.hasIn(['offlineData','department']) && <ChatDepartment defaultValueField={this.state['DepartamentID']} setDefaultValue={this.props.chatwidget.get('departmentDefault')} onChangeContent={this.handleContentChange} isInvalid={this.props.chatwidget.hasIn(['validationErrors','department'])} departments={this.props.chatwidget.getIn(['offlineData','department'])} />}\n                            </div>\n                            {(!this.props.chatwidget.hasIn(['chat_ui','hstr_btn']) || mappedFieldsCustom !== \"\" || mappedFields !== \"\") && <div className=\"row\">\n                                <div className=\"col-12 pb-2\">\n                                    <button type=\"submit\" disabled={this.props.chatwidget.get('processStatus') == 1} className=\"btn btn-secondary btn-sm\">{this.props.chatwidget.get('processStatus') == 1 && <i className=\"material-icons\">&#xf113;</i>}{this.props.chatwidget.getIn(['chat_ui','custom_start_button']) || t('start_chat.leave_a_message')}</button>\n                                    {this.props.chatwidget.get('isOnline') === true && this.props.chatwidget.get('isOfflineMode') === true && <button type=\"button\" onClick={this.goToChat} className=\"float-end btn btn-sm btn-link text-muted\">&laquo; {t('button.back_to_chat')}</button>}\n                                </div>\n                            </div>}\n                        </form>\n                    </div>}\n                      \n                      \n                  </div>\n            )\n        } else if (this.props.chatwidget.get('processStatus') == 2) {\n            return (\n                <div id=\"id-container-fluid\">\n\n                {this.props.chatwidget.hasIn(['chat_ui','operator_profile']) && this.props.chatwidget.getIn(['chat_ui','operator_profile']) != '' && <div className=\"py-2 px-3 offline-intro-operator\" dangerouslySetInnerHTML={{__html:this.props.chatwidget.getIn(['chat_ui','operator_profile'])}}></div>}\n\n                {this.props.chatwidget.hasIn(['chat_ui','offline_intro']) && this.props.chatwidget.getIn(['chat_ui','offline_intro']) != '' && <p className=\"pb-1 mb-0 pt-2 px-3 fw-bold offline-intro offline-intro-filled\" dangerouslySetInnerHTML={{__html:this.props.chatwidget.getIn(['chat_ui','offline_intro'])}}></p>}\n\n                    <div className=\"container-fluid\">\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <p className=\"pt-2\" dangerouslySetInnerHTML={{__html:this.props.chatwidget.getIn(['chat_ui','thank_feedback']) || t('start_chat.thank_you_for_feedback')}}></p>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            )\n        }\n    }\n}\n\nexport default withTranslation()(OfflineChat);\n"],"names":["OfflineChat","connect","store","chatwidget","_dec","_class","_Component","_inherits","_super","props","_this","_classCallCheck","call","state","initOfflineFormCall","handleSubmit","bind","_assertThisInitialized","handleContentChange","handleContentChangeCustom","goToChat","_createClass","key","value","dep_default","this","dispatch","initOfflineForm","get","event","fields","hasFile","formData","FormData","append","name","getIn","helperFunctions","getTimeZone","iframeMode","window","parent","location","lhcChat","opener","href","substring","protocol","length","instWindow","e","String","document","customFields","getCustomFieldsSubmit","_objectSpread","submitData","JSON","stringify","submitOfflineForm","preventDefault","obj","_this2","currentState","id","setState","size","map","dep","data","prefillFields","field","type","attr","prevProps","prevState","snapshot","getElementById","headerContent","offsetHeight","sendMessageParent","_this3","t","React","className","role","ChatAbort","closeText","full_height","close","minimizeWidget","as_html","text","mappedFields","ChatField","chatUI","isInvalid","hasIn","attrPrefill","defaultValueField","onChangeContent","mappedFieldsCustom","dangerouslySetInnerHTML","__html","onSubmit","ChatDepartment","setDefaultValue","departments","disabled","onClick","Component","withTranslation"],"sourceRoot":""}