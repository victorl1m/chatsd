{"version":3,"file":"800.d7751e11544fc917bd5a.js","mappings":"uOAEgD,IAE1CA,EAAS,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,I,IAAAE,G,EAAAH,E,gaASX,SAAAA,EAAYI,GAAO,IAAAC,EAGmB,OAHnBC,EAAAA,EAAAA,GAAA,KAAAN,GACfK,EAAAF,EAAAI,KAAA,KAAMH,IAAOI,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAJ,GAAA,QART,CACJK,KAAM,KACNC,QAAS,GACTC,OAAQ,KACRC,SAAS,KACZL,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAJ,GAAA,gBAsCc,WACXA,EAAKD,MAAMU,QACf,IApCIT,EAAKU,SAAWV,EAAKU,SAASC,MAAIP,EAAAA,EAAAA,GAAAJ,IAClCA,EAAKY,SAAWC,EAAAA,YAAkBb,CACtC,CAkFC,OAlFAc,EAAAA,EAAAA,GAAAnB,EAAA,EAAAoB,IAAA,WAAAC,MAED,SAASC,GAAO,IAAAC,EAAA,KAEZC,KAAKC,SAAS,CAAC,SAAY,IAE3BC,IAAAA,KAAWC,OAAOC,QAAkB,SAAI,kCAAoCJ,KAAKpB,MAAMyB,OAAS,IAAML,KAAKpB,MAAM0B,SAAW,iBAAkB,CAACC,MAAMP,KAAKQ,MAAMtB,MAAO,CAACuB,QAAU,CAAC,eAAgB,uCAAuCC,MAAK,SAACC,GACjN,GAAvBA,EAASC,KAAKC,MACdd,EAAKnB,MAAMU,UAEXS,EAAKE,SAAS,CAAC,SAAY,IAC3BF,EAAKE,SAAS,CAAC,OAAWU,EAASC,KAAKE,SAEhD,IAEIhB,GACAA,EAAMiB,gBACd,GAAC,CAAAnB,IAAA,oBAAAC,MAED,WAAoB,IAAAmB,EAAA,KAChBd,IAAAA,IAAUC,OAAOC,QAAkB,SAAI,kCAAoCJ,KAAKpB,MAAMyB,OAAS,IAAML,KAAKpB,MAAM0B,UAC/GI,MAAK,SAACC,GACHK,EAAKf,SAAS,CAAC,KAASU,EAASC,OAC7BI,EAAKvB,SAASwB,SACdD,EAAKvB,SAASwB,QAAQC,OAE9B,IACCC,OAAM,SAACC,GACJC,QAAQC,IAAIF,EAChB,GACJ,GAAC,CAAAxB,IAAA,SAAAC,MAMD,WAAS,IAAA0B,EAAA,KACGC,EAAMxB,KAAKpB,MAAX4C,EAER,OACI9B,EAAAA,cAACA,EAAAA,SAAc,KACU,OAApBM,KAAKQ,MAAMtB,MAAiBQ,EAAAA,cAACA,EAAAA,SAAc,KAC5CA,EAAAA,cAAA,OAAK+B,UAAU,6BACf/B,EAAAA,cAAA,OAAKgC,KAAK,SAASC,GAAG,iBAAiB,aAAW,OAAOF,UAAU,0CAA0CG,SAAS,MAClHlC,EAAAA,cAAA,OAAK+B,UAAU,yBACX/B,EAAAA,cAAA,OAAK+B,UAAU,iBACX/B,EAAAA,cAAA,OAAK+B,UAAU,gBAAe,IAAC/B,EAAAA,cAAA,MAAI+B,UAAU,cAAcE,GAAG,gBAAejC,EAAAA,cAAA,QAAM+B,UAAU,kBAAiB,KAAgBD,EAAE,gBAC5H9B,EAAAA,cAAA,UAAQmC,KAAK,SAASJ,UAAU,sBAAsB,kBAAgB,QAAQK,QAAS9B,KAAK+B,aAAc,aAAW,WAEzHrC,EAAAA,cAAA,OAAK+B,UAAU,cACX/B,EAAAA,cAAA,OAAK+B,UAAU,OACX/B,EAAAA,cAAA,OAAK+B,UAAU,UACVzB,KAAKQ,MAAMpB,QAAUM,EAAAA,cAAA,OAAK+B,UAAU,OAAOO,wBAAyB,CAACC,OAAOjC,KAAKQ,MAAMpB,UACxFM,EAAAA,cAAA,OAAK+B,UAAU,QACX/B,EAAAA,cAAA,QAAMwC,SAAUlC,KAAKT,UACjBG,EAAAA,cAAA,KAAG+B,UAAU,gBACRD,EAAE,yBAEP9B,EAAAA,cAAA,OAAK+B,UAAU,cACX/B,EAAAA,cAAA,SAAO+B,UAAU,cAAcD,EAAE,iBACjC9B,EAAAA,cAAA,SAAO+B,UAAU,0CAA0CU,IAAKnC,KAAKP,SAAU2C,SAAS,WAAWP,KAAK,QAAQQ,aAAcrC,KAAKQ,MAAMtB,KAAMoD,SAAU,SAACC,GAAC,OAAKhB,EAAKtB,SAAS,CAAC,KAASsC,EAAEC,OAAO3C,OAAO,EAAE4C,YAAajB,EAAE,oBAAqBkB,MAAOlB,EAAE,uBAE3P9B,EAAAA,cAAA,OAAK+B,UAAU,OACX/B,EAAAA,cAAA,OAAK+B,UAAU,SACX/B,EAAAA,cAAA,UAAQmC,KAAK,SAASc,SAAU3C,KAAKQ,MAAMnB,SAA8B,IAAnBW,KAAKQ,MAAMtB,KAAYuC,UAAU,gCAAgCD,EAAE,iBAE7H9B,EAAAA,cAAA,OAAK+B,UAAU,UACf/B,EAAAA,cAAA,OAAK+B,UAAU,SACX/B,EAAAA,cAAA,UAAQmC,KAAK,SAASJ,UAAU,uCAAuCK,QAAS9B,KAAK+B,cAAeP,EAAE,6BAc1J,KAAChD,CAAA,CA/FU,CAASoE,EAAAA,eAkGxB,WAAeC,EAAAA,EAAAA,IAAf,CAAiCrE,E","sources":["webpack://LHCReactAPP/./src/components/MailModal.js"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport axios from \"axios\";\nimport { withTranslation } from 'react-i18next';\n\nclass MailModal extends PureComponent {\n\n    state = {\n        mail: null,\n        success: '',\n        errors: null,\n        sending: false\n    };\n\n    constructor(props) {\n        super(props);\n        this.sendMail = this.sendMail.bind(this);\n        this.emailRef = React.createRef();\n    }\n\n    sendMail(event) {\n\n        this.setState({'sending' : true});\n\n        axios.post(window.lhcChat['base_url'] + \"widgetrestapi/sendmailsettings/\" + this.props.chatId + '/' + this.props.chatHash + '/(action)/send', {email:this.state.mail}, {headers : {'Content-Type': 'application/x-www-form-urlencoded'}}).then((response) => {\n            if (response.data.error == false) {\n                this.props.toggle();\n            } else {\n                this.setState({'sending' : false});\n                this.setState({'errors' : response.data.result});\n            }\n        });\n\n        if (event)\n            event.preventDefault();\n    }\n\n    componentDidMount() {\n        axios.get(window.lhcChat['base_url'] + 'widgetrestapi/sendmailsettings/' + this.props.chatId + '/' + this.props.chatHash)\n        .then((response) => {\n            this.setState({'mail' : response.data});\n            if (this.emailRef.current) {\n                this.emailRef.current.focus();\n            }\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n    }\n\n    dismissModal = () => {\n        this.props.toggle()\n    }\n\n    render() {\n        const { t } = this.props;\n\n        return (\n            <React.Fragment>\n                {this.state.mail !== null && <React.Fragment>\n                <div className=\"fade modal-backdrop show\"></div>\n                <div role=\"dialog\" id=\"dialog-content\" aria-modal=\"true\" className=\"fade modal show d-block mail-send-modal\" tabIndex=\"-1\">\n                    <div className=\"modal-dialog modal-lg\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\"> <h4 className=\"modal-title\" id=\"myModalLabel\"><span className=\"material-icons\">&#xf11a;</span>{t('button.mail')}</h4>\n                                <button type=\"button\" className=\"btn-close float-end\" data-bs-dismiss=\"modal\" onClick={this.dismissModal} aria-label=\"Close\"></button>\n                            </div>\n                            <div className=\"modal-body\">\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        {this.state.errors && <div className=\"mb-0\" dangerouslySetInnerHTML={{__html:this.state.errors}}></div>}\n                                        <div className=\"mb-0\">\n                                            <form onSubmit={this.sendMail}>\n                                                <p className=\"mail-explain\">\n                                                    {t('button.email_explain')}\n                                                </p>\n                                                <div className=\"form-group\">\n                                                    <label className=\"text-muted\">{t('button.email')}</label>\n                                                    <input className=\"form-control form-group form-control-sm\" ref={this.emailRef} required=\"required\" type=\"email\" defaultValue={this.state.mail} onChange={(e) => this.setState({'mail' : e.target.value})} placeholder={t('chat.enter_email')} title={t('chat.enter_email')} />\n                                                </div>\n                                                <div className=\"row\">\n                                                    <div className=\"col-5\">\n                                                        <button type=\"submit\" disabled={this.state.sending || this.state.mail == ''} className=\"btn btn-primary w-100 btn-sm\">{t('button.send')}</button>\n                                                    </div>\n                                                    <div className=\"col-2\"></div>\n                                                    <div className=\"col-5\">\n                                                        <button type=\"button\" className=\"btn text-muted btn-link btn-sm w-100\" onClick={this.dismissModal}>{t('button.cancel')}</button>\n                                                    </div>\n                                                </div>\n                                            </form>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n               </div>\n               </React.Fragment>}\n            </React.Fragment>\n        )\n    }\n}\n\nexport default withTranslation()(MailModal);\n"],"names":["MailModal","_PureComponent","_inherits","_super","props","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","mail","success","errors","sending","toggle","sendMail","bind","emailRef","React","_createClass","key","value","event","_this2","this","setState","axios","window","lhcChat","chatId","chatHash","email","state","headers","then","response","data","error","result","preventDefault","_this3","current","focus","catch","err","console","log","_this4","t","className","role","id","tabIndex","type","onClick","dismissModal","dangerouslySetInnerHTML","__html","onSubmit","ref","required","defaultValue","onChange","e","target","placeholder","title","disabled","PureComponent","withTranslation"],"sourceRoot":""}